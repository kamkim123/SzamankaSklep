# Generated by Django 5.2.6 on 2025-10-31 13:10

import uuid
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0013_profile_id_alter_profile_uuid'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # 1) Usuń 'id' jeśli istnieje i ustaw PK na user_id TYLKO jeśli obecny PK nie jest na user_id
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.RemoveField(
                    model_name='profile',
                    name='id',
                ),
            ],
            database_operations=[
                migrations.RunSQL(
                    """
                    DO $$
                    DECLARE
                      pk_name text;
                      pk_cols text;
                    BEGIN
                      -- Drop kolumnę id, jeśli istnieje
                      IF EXISTS (
                        SELECT 1 FROM information_schema.columns
                        WHERE table_name='users_profile' AND column_name='id'
                      ) THEN
                        EXECUTE 'ALTER TABLE users_profile DROP COLUMN id';
                      END IF;

                      -- Jaka jest obecna definicja PK?
                      SELECT c.conname,
                             pg_get_constraintdef(c.oid)
                      INTO pk_name, pk_cols
                      FROM pg_constraint c
                      JOIN pg_class t ON c.conrelid = t.oid
                      WHERE t.relname = 'users_profile' AND c.contype = 'p'
                      LIMIT 1;

                      -- Jeśli PK jest już na (user_id), nic nie rób.
                      IF pk_cols IS NOT NULL AND pk_cols ILIKE 'PRIMARY KEY (user_id)' THEN
                        RETURN;
                      END IF;

                      -- W innym wypadku: zdejmij istniejący PK (jeśli jest) i ustaw na user_id
                      IF pk_name IS NOT NULL THEN
                        EXECUTE format('ALTER TABLE users_profile DROP CONSTRAINT %I', pk_name);
                      END IF;

                      EXECUTE 'ALTER TABLE users_profile ADD PRIMARY KEY (user_id)';
                    END $$;
                    """,
                    reverse_sql="""
                    DO $$
                    DECLARE pk_name text;
                    BEGIN
                      -- Cofka: zdejmij jakikolwiek PK (bez zakładania nowego)
                      SELECT c.conname INTO pk_name
                      FROM pg_constraint c
                      JOIN pg_class t ON c.conrelid = t.oid
                      WHERE t.relname = 'users_profile' AND c.contype = 'p'
                      LIMIT 1;

                      IF pk_name IS NOT NULL THEN
                        EXECUTE format('ALTER TABLE users_profile DROP CONSTRAINT %I', pk_name);
                      END IF;

                      -- i przywróć kolumnę id (bez PK), jeśli potrzebujesz odwracalności
                      IF NOT EXISTS (
                        SELECT 1 FROM information_schema.columns
                        WHERE table_name='users_profile' AND column_name='id'
                      ) THEN
                        EXECUTE 'ALTER TABLE users_profile ADD COLUMN id bigserial';
                      END IF;
                    END $$;
                    """
                ),
            ],
        ),

        # 2) PRZEŁĄCZ PK NA user — ale TYLKO w STATE, zero SQL po stronie DB
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AlterField(
                    model_name='profile',
                    name='user',
                    field=models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='profile',
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            database_operations=[
                # PUSTO: żadnych ALTER TABLE z PK tutaj
            ],
        ),

        # 3) Reszta zwykłych zmian
        migrations.AlterField(
            model_name='profile',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
    ]
